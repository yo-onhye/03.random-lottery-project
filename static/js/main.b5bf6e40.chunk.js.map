{"version":3,"sources":["components/login/Login.js","components/lnb/Lnb.js","components/youtube/YoutubeItem.js","components/youtube/YoutubeList.js","App.js","serviceWorker.js","index.js"],"names":["Login","userIdInput","createRef","userPwInput","this","props","vaildAccount","userId","userPw","onChange","onCheckVaild","className","onSubmit","htmlFor","type","id","value","name","ref","placeholder","Component","Lnb","channelIdInput","channelNameInput","channelId","channelName","data","isShow","onActiveLnb","onInsert","onDelete","onClick","title","map","d","key","to","YoutubeItem","nextProps","nextState","owner","description","videoId","width","height","src","frameBorder","allowFullScreen","masonryOptions","transitionDuration","imagesLoadedOptions","background","YoutubeList","state","youtubeDatas","loading","getData","a","setState","axios","get","response","items","console","error","prevProps","prevState","elementType","options","etag","snippet","channelTitle","resourceId","App","dataId","channelDatas","userDatas","userDataId","userDataPw","checkUserAccount","e","preventDefault","userData","find","undefined","handleLnb","handleChange","target","handleInsert","concat","temp","handleDelete","filter","user","activeClassName","onOutsideClick","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b5bf6e40.chunk.js","sourcesContent":["import React, { Component, createRef } from \"react\";\r\nimport \"./Login.css\";\r\n\r\nclass Login extends Component {\r\n\tuserIdInput = createRef();\r\n\tuserPwInput = createRef();\r\n\r\n\trender() {\r\n\t\tconst { vaildAccount, userId, userPw, onChange, onCheckVaild } = this.props;\r\n\t\treturn (\r\n\t\t\t<section className='projectSection'>\r\n\t\t\t\t<div className='sectionTitle'>\r\n\t\t\t\t\t<h2>로그인</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='sectionCont'>\r\n\t\t\t\t\t<div className=\"loginBox\">\r\n\t\t\t\t\t\t<form onSubmit={onCheckVaild}>\r\n\t\t\t\t\t\t\t<dl className=\"loginList\">\r\n\t\t\t\t\t\t\t\t<dt><label htmlFor=\"userId\">아이디</label></dt>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div className=\"projectInput\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"projectInputText\" id=\"userId\" value={userId} name=\"userId\" onChange={onChange} ref={this.userIdInput} placeholder=\"비밀번호를 입력해주세요.\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t\t<dl className=\"loginList\">\r\n\t\t\t\t\t\t\t\t<dt><label htmlFor=\"userPw\">비밀번호</label></dt>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div className=\"projectInput\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"password\" className=\"projectInputText\" id=\"userPw\" value={userPw} name=\"userPw\" onChange={onChange} ref={this.userPwInput} placeholder=\"비밀번호를 입력해주세요.\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t\t{!vaildAccount && <span className=\"projectInvaildText\">아이디와 비밀번호를 입력해주세요.</span>}\r\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"loginBtn\"><span>로그인</span></button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component, createRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Lnb.css\";\r\n\r\nclass Lnb extends Component {\r\n\tchannelIdInput = createRef();\r\n\tchannelNameInput = createRef();\r\n\r\n\trender() {\r\n\t\tconst { channelId, channelName, data, isShow, onActiveLnb, onInsert, onDelete, onChange } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className={`projectLnb ${isShow && \"is-active\"}`}>\r\n\t\t\t\t<button type=\"button\" className=\"projcetBtnNav\" onClick={onActiveLnb}>\r\n\t\t\t\t\t<span className=\"projcetBtnBox\">\r\n\t\t\t\t\t\t<span className=\"projcetBtnInner\"><span className=\"blind\">채널 관리하기</span></span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className='projectLnbInner'>\r\n\t\t\t\t\t<form onSubmit={onInsert}>\r\n\t\t\t\t\t\t<div className='projectLnbInput'>\r\n\t\t\t\t\t\t\t<input value={channelId} name='channelId' onChange={onChange} ref={this.channelIdInput} title='채널 ID를 입력해주세요.' placeholder='채널 ID를 입력해주세요.' />\r\n\t\t\t\t\t\t\t<input value={channelName} name='channelName' onChange={onChange} ref={this.channelNameInput} title='채널 명을 입력해주세요.' placeholder='채널 명을 입력해주세요.' />\r\n\t\t\t\t\t\t\t<button type='submit' className='projectLnbBtn'>추가하기</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<ul className='projectChannelList'>\r\n\t\t\t\t\t\t{data.map((d) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li key={d.id}>\r\n\t\t\t\t\t\t\t\t\t<p>{d.channelName}</p>\r\n\t\t\t\t\t\t\t\t\t<button type='button' className='ChannelRemoveBtn' onClick={() => onDelete(d.id)}>\r\n\t\t\t\t\t\t\t\t\t\t<span className='blind'>삭제하기</span>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<Link to=\"/04.project-pick-channel\" className=\"NavloginBtn\">로그인</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Lnb;\r\n","import React, { Component } from 'react';\r\nimport './YoutubeItem.css';\r\n\r\nclass YoutubeItem extends Component {\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\tif (this.props !== nextProps) {\r\n\t\t\treturn true;\r\n\t\t} else return false;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { owner, title, description, videoId } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"myYoutubeItem\">\r\n\t\t\t\t<div className='myYoutubeTop'>\r\n\t\t\t\t\t<p className='myYoutubeOwner'>{title}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='myYoutubeCont'>\r\n\t\t\t\t\t<div className='myYoutubeMedia'>\r\n\t\t\t\t\t\t<iframe width=\"100%\" height=\"100%\" src={`https://www.youtube.com/embed/${videoId}`} title={title} frameBorder=\"0\" allowFullScreen />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className='myYoutubeTitle'>[CHANNEL] {owner}</p>\r\n\t\t\t\t\t<p className='myYoutubeDetail'>{description}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default YoutubeItem;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Masonry from 'react-masonry-component';\r\nimport YoutubeItem from \"./YoutubeItem\";\r\nimport \"./YoutubeList.css\";\r\n\r\nconst masonryOptions = {\r\n\ttransitionDuration: 0\r\n};\r\n \r\nconst imagesLoadedOptions = { background: '.my-bg-image-el' }\r\n\r\nclass YoutubeList extends Component {\r\n\tstate = {\r\n\t\tyoutubeDatas: null,\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tgetData = async () => {\r\n\t\ttry {\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: true,\r\n\t\t\t});\r\n\r\n\t\t\tconst { channelId } = this.props;\r\n\r\n\t\t\tconst response = await axios.get(`https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=${channelId}&maxResults=50&key=AIzaSyC3dYrIaoJUiV8HSSeJvje5ZPOB0zQPVLs`);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tyoutubeDatas: response.data.items,\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(e);\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tloading: false,\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getData();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (this.props.channelId !== prevProps.channelId) {\r\n\t\t\tthis.getData();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { youtubeDatas, loading } = this.state;\r\n\t\tconst { channelName } = this.props;\r\n\t\treturn (\r\n\t\t\t<section className='projectSection'>\r\n\t\t\t\t<div className='sectionTitle'>\r\n\t\t\t\t\t<h2>{channelName}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='sectionCont'>\r\n\t\t\t\t\t{loading && \r\n\t\t\t\t\t\t<div className=\"LoadingContainer\">\r\n\t\t\t\t\t\t\t<div className=\"LoadingAni\"></div>\r\n\t\t\t\t\t\t\t<h3 className='LoadingText'>Loading</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<Masonry\r\n\t\t\t\t\t\t\tclassName={'myYoutubeList'}\r\n\t\t\t\t\t\t\telementType={'ul'}\r\n\t\t\t\t\t\t\toptions={masonryOptions}\r\n\t\t\t\t\t\t\timagesLoadedOptions={imagesLoadedOptions}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{!loading &&\r\n\t\t\t\t\t\t\tyoutubeDatas &&\r\n\t\t\t\t\t\t\t!youtubeDatas.error &&\r\n\t\t\t\t\t\t\tyoutubeDatas.map((d) => (\r\n\t\t\t\t\t\t\t\t<li key={d.etag}>\r\n\t\t\t\t\t\t\t\t\t<YoutubeItem owner={d.snippet.channelTitle} title={d.snippet.title} description={d.snippet.description} videoId={d.snippet.resourceId.videoId} />\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Masonry>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default YoutubeList;\r\n","import React, { Component } from \"react\";\nimport { Route, NavLink, Switch } from \"react-router-dom\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport Login from \"./components/login\";\nimport Lnb from \"./components/lnb\";\nimport Youtube from \"./components/youtube\";\nimport \"./App.css\";\n\nclass App extends Component {\n\tid = 2;\n\tdataId = 2;\n\tstate = {\n\t\tuserId: \"\",\n\t\tuserPw: \"\",\n\t\tchannelId: \"\",\n\t\tchannelName: \"\",\n\t\tchannelDatas: [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tchannelId: \"PLr0T5CaHaPwVVVUeriESL3fyfF3eRUuHr\",\n\t\t\t\tchannelName: \"[🧑‍⚕️슬기로운 의사생활] 미도와 파라솔\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tchannelId: \"PLdyB3s37qpTPuJSn-LjZqBFuf7u-XmA1z\",\n\t\t\t\tchannelName: \"사이코지만 괜찮아\",\n\t\t\t},\n\t\t],\n\t\tuserDatas: [\n\t\t\t{\n\t\t\t\tdataId: 0,\n\t\t\t\tuserDataId: \"user111\",\n\t\t\t\tuserDataPw: \"user111!\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdataId: 1,\n\t\t\t\tuserDataId: \"user222\",\n\t\t\t\tuserDataPw: \"user222!\",\n\t\t\t},\n\t\t],\n\t\tvaildAccount: true,\n\t\tisShow: false,\n\t};\n\n\tcheckUserAccount = (e) => {\n\t\te.preventDefault();\n\n\t\tconst { userDatas, userId, userPw } = this.state;\n\t\tif (userId !== \"\" && userPw !== \"\") {\n\t\t\tconst userData = userDatas.find((userData) => userData.userDataId === userId && userData.userDataPw === userPw);\n\t\t\tif (userData === undefined) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvaildAccount: false,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvaildAccount: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn userData;\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tvaildAccount: false,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleLnb = (e) => {\n\t\te.preventDefault();\n\t\tconst { isShow } = this.state;\n\n\t\tif (!isShow) {\n\t\t\tthis.setState({\n\t\t\t\tisShow: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisShow: false,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleChange = (e) => {\n\t\tconst { value, name } = e.target;\n\t\tthis.setState({\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\thandleInsert = (e) => {\n\t\te.preventDefault();\n\n\t\tconst { channelDatas, channelId, channelName } = this.state;\n\t\tthis.setState({\n\t\t\tchannelDatas: channelDatas.concat({\n\t\t\t\tid: this.id,\n\t\t\t\tchannelId,\n\t\t\t\tchannelName,\n\t\t\t}),\n\t\t\tchannelId: \"\",\n\t\t\tchannelName: \"\",\n\t\t\ttemp: {},\n\t\t});\n\n\t\tthis.id++;\n\t};\n\n\thandleDelete = (id) => {\n\t\tthis.setState({\n\t\t\tchannelDatas: this.state.channelDatas.filter((user) => user.id !== id),\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { isShow, userId, userPw, vaildAccount, channelId, channelName, channelDatas, userDatas } = this.state;\n\t\treturn (\n\t\t\t<div className='projectMain'>\n\t\t\t\t<div className='projcetLogo'>\n\t\t\t\t\t<h1>\n\t\t\t\t\t\tPick Channel<span>.</span>\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t\t<nav className='projcetNav'>\n\t\t\t\t\t<ul className='projcetNavList'>\n\t\t\t\t\t\t{channelDatas.map((d) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={d.id}>\n\t\t\t\t\t\t\t\t\t<NavLink to={`/04.project-pick-channel/${d.id}`} activeClassName='active'>\n\t\t\t\t\t\t\t\t\t\t<span>#</span> {d.channelName}\n\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t\t<OutsideClickHandler onOutsideClick={isShow && this.handleLnb}>\n\t\t\t\t\t<Lnb channelId={channelId} channelName={channelName} data={channelDatas} isShow={isShow} onActiveLnb={this.handleLnb} onInsert={this.handleInsert} onChange={this.handleChange} onDelete={this.handleDelete} />\n\t\t\t\t</OutsideClickHandler>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/04.project-pick-channel' render={() => <Login data={userDatas} userId={userId} userPw={userPw} vaildAccount={vaildAccount} onChange={this.handleChange} onCheckVaild={this.checkUserAccount} />} />\n\t\t\t\t\t{channelDatas.map((d) => {\n\t\t\t\t\t\treturn <Route path={`/04.project-pick-channel/${d.id}`} render={() => <Youtube channelName={d.channelName} channelId={d.channelId} />} />;\n\t\t\t\t\t})}\n\t\t\t\t\t<Route render={() => <div className='projectError'>404 NOT FOUND :(</div>} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}